apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-weight: "5"  
spec:
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z mongodb {{ .Values.mongodb.containerPort }}; do
            echo "Waiting for MongoDB to be ready..."
            sleep 5
          done
          echo "MongoDB is ready!"
      containers:
      - name: mongodb-init
        image: mongo:7.0
        envFrom:
        - configMapRef:
            name: mongodb-conf
        command:
        - sh
        - -c
        - |
          mongo --host mongodb:{{ .Values.mongodb.containerPort }} \
            -u $MONGO_INITDB_ROOT_USERNAME \
            -p $MONGO_INITDB_ROOT_PASSWORD \
            --authenticationDatabase admin \
            --eval "
              db = db.getSiblingDB('{{ .Values.mongodb.database | default "myapp" }}');
              
              if (!db.getUser('{{ .Values.mongodb.appUser | default "appuser" }}')) {
                db.createUser({
                  user: '{{ .Values.mongodb.appUser | default "appuser" }}',
                  pwd: '{{ .Values.mongodb.appPassword | default "apppassword" }}',
                  roles: [
                    { role: 'readWrite', db: '{{ .Values.mongodb.database | default "myapp" }}' }
                  ]
                });
                print('Application user created successfully');
              } else {
                print('Application user already exists');
              }
              
              db.createCollection('initialized');
              print('Database initialization completed');
            "